<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="CMH-Audit-ManangerChange-Rule" type="Listener">
  <Description>This rule can be used when the ObjectAttribute being listened to has changed.</Description>
  <ReferencedRules>
    <Reference class="sailpoint.object.Rule" name="CMH-AD-Generic-Rulelibrary"/>
  </ReferencedRules>
  <Signature returnType="void">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="environment">
        <Description>
          Optional arguments passed from the task executor, if the rule is running within a task.
        </Description>
      </Argument>
      <Argument name="identity">
        <Description>
          The identity which owns the attribute.
        </Description>
      </Argument>
      <Argument name="attributeDefinition">
        <Description>
          The definition of the ObjectAttribute.
        </Description>
      </Argument>
      <Argument name="attributeName">
        <Description>
          The name of the ObjectAttribute.
        </Description>
      </Argument>
      <Argument name="oldValue">
        <Description>
          The original value of the ObjectAttribute.
        </Description>
      </Argument>
      <Argument name="newValue">
        <Description>
          The new value of the ObjectAttribute.
        </Description>
      </Argument>
    </Inputs>
  </Signature>
  <Source><![CDATA[
    
    	import org.apache.log4j.Logger;
    	import sailpoint.tools.Util;
    	
    	Logger log = Logger.getLogger("Rule.CMH-Audit-ManangerChange-Rule");
    	if(null != identity) {
    	   String userName = identity.getName();
    	   log.debug("Entering CMH-Audit-ManangerChange-Rule for identity:"+userName);
    	   if(oldValue != null && newValue != null) {
	          String oldManager = oldValue.getName();
	          String newManager = newValue.getName();
	          if(!Util.nullSafeCaseInsensitiveEq(oldManager,newManager)){
	             log.debug("CMH-Audit-ManangerChange-Rule: Manager is updated , proceeding with audit");
                 String empId =identity.getStringAttribute("employeeId");
	             Map map = new HashMap();
		         map.put("setString1","User EmployeeID :"+empId);
		         map.put("setString2","User Manager has been updated from "+oldManager+" to "+newManager);
	             auditWrite("Manager-Change", "CMH-Audit-ManangerChange-Rule",userName, "Manager", newManager, map);
              }
           }
           log.debug("Exiting CMH-Audit-ManangerChange-Rule for identity:"+userName);
        }
            
  ]]></Source>
</Rule>
