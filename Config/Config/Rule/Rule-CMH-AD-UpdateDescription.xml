<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="CMH-AD-Update-Description" type="IdentityAttributeTarget">
  <Description>Identity attribute target rules are used to transform identity attribute values that are being pushed to targets.</Description>
  <Signature returnType="Object">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="value" type="Object">
        <Description>
          The value of the identity attribute.  Note that this could be single value or a list of values.
        </Description>
      </Argument>
      <Argument name="sourceIdentityAttribute">
        <Description>
          The sailpoint.object.ObjectAttribute for this target.
        </Description>
      </Argument>
      <Argument name="sourceIdentityAttributeName">
        <Description>
          The name of the identity attribute for this target.
        </Description>
      </Argument>
      <Argument name="sourceAttributeRequest">
        <Description>
          The sailpoint.object.ProvisioningPlan.AttributeRequest that is
          setting the attribute on the identity.
        </Description>
      </Argument>
      <Argument name="target">
        <Description>
          The sailpoint.object.AttributeTarget that is being processed.
        </Description>
      </Argument>
      <Argument name="link">
        <Description>
          The sailpoint.object.Link that is being processed.
        </Description>
      </Argument>
      <Argument name="identity">
        <Description>
          The sailpoint.object.Identity that is being processed.
        </Description>
      </Argument>
      <Argument name="project">
        <Description>
          The sailpoint.object.ProvisioningProject that has the changes that
          are being requested.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="attributeValue">
        <Description>
          The transformed value that will be pushed to the target.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[
  import org.apache.log4j.Logger;
  import sailpoint.object.Identity;
  import sailpoint.tools.Util;

  Logger cmhLogger = Logger.getLogger("Rule.CMH-AD-Update-Description");
  cmhLogger.debug("Entering CMH-AD-Update-Description Rule for identity "+identity!=null?identity.getName():"");

  String description = null;
  String displayName = "";
  if(identity!=null){
    String userType = identity.getStringAttribute("userType");
    if(Util.isNotNullOrEmpty(userType)){
      if(userType.equalsIgnoreCase("EMPLOYEE")){
        description = identity.getStringAttribute("employeeId");
      }else if(userType.equalsIgnoreCase("NONEMPLOYEE")){
        if(value!=null && value instanceof String){
          Identity managerIden = context.getObjectByName(Identity.class,(String)value);
          if(managerIden!=null){
            description = identity.getStringAttribute("employeeId");
            String initials = managerIden.getStringAttribute("middleInitial");
            String lastName = managerIden.getLastname();
            if(Util.isNotNullOrEmpty(lastName)){
              displayName = displayName.concat(lastName);
            }
            String firstName = managerIden.getFirstname();
            if(firstName!=null){
              if(Util.isNotNullOrEmpty(displayName)){
                displayName = displayName.concat(", ");
              }
              displayName = displayName.concat(firstName);
            }
            if(Util.isNotNullOrEmpty(initials)){
              displayName = displayName.concat(" ").concat(initials).concat(".");
            }
          }
        }
      }
    }
  }

  if(Util.isNotNullOrEmpty(description) && Util.isNotNullOrEmpty(displayName)){
    description = description +" "+displayName;
  }

  cmhLogger.debug("Exiting CMH-AD-Update-Description Rule");

  return description;
  ]]></Source>
</Rule>
