<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="CMH-AD-HomeDirectory-Rule" type="FieldValue">
  <Description>This rule can be used to generate a field value (eg - an account name) using data from the given Identity. If this rule is run in the context of a workflow step then the arguments passed into the step will also be available. Also, any field values that have been processed so far from the policy related to the Application/Role will be available.</Description>
  <Signature returnType="String">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity" type="Identity">
        <Description>
          The Identity object that represents the user needing the field value.
        </Description>
      </Argument>
      <Argument name="link" type="Link">
        <Description>
          The sailpoint.object.Link that is being acted upon. If the link is not applicable,
          this value will be null.
        </Description>
      </Argument>
      <Argument name="group" type="ManagedAttribute">
        <Description>
          The sailpoint.object.ManagedAttribute that is being acted upon. If the managed attribute
          is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="project" type="ProvisioningProject">
        <Description>
          The provisioning project being acted upon. If a provisioning project is not applicable,
          the value will be null.
        </Description>
      </Argument>
      <Argument name="accountRequest" type="ProvisioningPlan.AccountRequest">
        <Description>
          The account request. If an account request is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="objectRequest" type="ProvisioningPlan.ObjectRequest">
        <Description>
          The object request. If an object request is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="role" type="Bundle">
        <Description>
          The role with the template we are compiling. If the role is
          not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="application" type="Application">
        <Description>
          The sailpont.object.Application with the template we are compiling. If the application
          is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="template" type="Template">
        <Description>
          The Template that contains this field.
        </Description>
      </Argument>
      <Argument name="field" type="Field">
        <Description>
          The current field being computed.
        </Description>
      </Argument>
      <Argument name="current" type="Object">
        <Description>
          The current value corresponding to the identity or account attribute that the field represents.
          If no current value is set, this value will be null.
        </Description>
      </Argument>
      <Argument name="operation" type="ProvisioningPlan.Operation">
        <Description>
          The operation being performed.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="value">
        <Description>
          The string value created.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[
  import sailpoint.object.Custom;
  import sailpoint.tools.Util;


  public String getHomeDirectoryPath(){
    String homeDirectoryPath = null;
    Custom custom = context.getObjectByName(Custom.class,"CMH-Custom-Object-AD-Application");
    if(custom!=null){
      homeDirectoryPath = custom.getString("homeDirPath");
    }
    return homeDirectoryPath;
  }


  public boolean isHomeDirectoryReq(String assignType){
    boolean homeDirReq = false;
    Custom custom = context.getObjectByName(Custom.class,"CMH-Custom-HomeDirectory-UserTypes");
    if(custom!=null && custom.get("UserTypes")!=null){
      Map userMap = (Map)custom.get("UserTypes");
      List nMailReqList = custom.getList("NotRequiredMail"); 
      if(!Util.isEmpty(nMailReqList) && nMailReqList.contains(assignType)){
        homeDirReq = true;
      }else {
        List mailReqList = custom.getList("RequiredMail");
        if(!Util.isEmpty(mailReqList) && mailReqList.contains(assignType)){
          homeDirReq = true;
        }
      }
    }
    return homeDirReq;
  }

  String homeDirVal = null;
  if(identity!=null){
    String idenName = identity.getName();
    String assignType = identity.getStringAttribute("assignmentType");
    if(Util.isNotNullOrEmpty(idenName) && Util.isNotNullOrEmpty(assignType)){
      String homeDirPath = getHomeDirectoryPath();
      if(Util.isNotNullOrEmpty(homeDirPath)){
        if(isHomeDirectoryReq(assignType)){
          homeDirVal = homeDirPath.concat(idenName);
        }
      }
    }
  }
  return homeDirVal;
  ]]></Source>
</Rule>
