<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="CMH-Leaver-Disable-User-Selection-Rule" type="IdentitySelector">
  <Description>This rule is used to select an Identity that is related to the given Identity</Description>
  <Signature returnType="boolean">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity" type="Identity">
        <Description>
          The identity.
        </Description>
      </Argument>
      <Argument name="roleName" type="String">
        <Description>
          The name of the sailpoint.object.Bundle (role) that is being selected for the Identity. 
          If roles are not applicable to this Identity selection, this value will be void.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="success">
        <Description>
            True if the selection was successful; false otherwise.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[
	import sailpoint.object.Identity;
	import sailpoint.object.Filter;
	import sailpoint.object.QueryOptions;
	import sailpoint.tools.Util; 
	import org.apache.log4j.Logger;
  
    Logger log = Logger.getLogger("cmh.authsource.rules");
           
    log.debug("Entering CMH-Leaver-Disable-User-Selection-Rule");
    
    boolean disableUser = false;
    if(null !=identity) {
		String empId = identity.getStringAttribute("employeeId");
		String uName = identity.getName();
		if(Util.isNotNullOrEmpty(empId) && Util.isNotNullOrEmpty(uName)) {
			if(uName.contains("_old")){
				uName = uName.substring(0,uName.indexOf("_old")).trim();
				log.debug("CMH-Leaver-Disable-User-Selection-Rule: Username :"+uName);
				QueryOptions ops = new QueryOptions();
				Filter userFilter = Filter.eq("otherEmpId",empId);
				Filter userNameFilter = Filter.eq("userName",uName);
				Filter finalFilter = Filter.and(userFilter,userNameFilter);
				ops.add(finalFilter);
				int count = context.countObjects(Identity.class,ops);
				log.debug("CMH-Leaver-Disable-User-Selection-Rule: Count value from the search :"+count);
				if(count>0){
					disableUser = false;
				}
			}else{
				disableUser = true;
			}
			
		}
	}
    log.debug("CMH-Leaver-Disable-User-Selection-Rule: User Found ? :"+disableUser);
    
    return disableUser;
  ]]></Source>
</Rule>
